{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nexport default {\n  name: 'CallbackPage',\n  data() {\n    return {\n      loading: true,\n      error: null\n    };\n  },\n  created() {\n    this.handleCallback();\n  },\n  methods: {\n    async handleCallback() {\n      const urlParams = new URLSearchParams(window.location.search);\n      const code = urlParams.get('code');\n      const error = urlParams.get('error');\n      if (error) {\n        this.error = `Spotify authentication error: ${error}`;\n        this.loading = false;\n        return;\n      }\n      if (!code) {\n        this.error = \"No authorization code received from Spotify\";\n        this.loading = false;\n        return;\n      }\n      try {\n        const CLIENT_ID = window.spotifyConfig?.clientId || process.env.VUE_APP_SPOTIFY_CLIENT_ID;\n        const CLIENT_SECRET = process.env.VUE_APP_SPOTIFY_CLIENT_SECRET;\n        const REDIRECT_URI = window.spotifyConfig?.redirectUri || process.env.VUE_APP_REDIRECT_URI || `${window.location.origin}/callback`;\n        console.log(\"Using client ID:\", CLIENT_ID);\n        console.log(\"Using redirect URI:\", REDIRECT_URI);\n        // Don't log client secret\n\n        // Create authorization string\n        const authString = `${CLIENT_ID}:${CLIENT_SECRET}`;\n        const base64Auth = btoa(authString);\n        const response = await fetch('https://accounts.spotify.com/api/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': `Basic ${base64Auth}`\n          },\n          body: new URLSearchParams({\n            grant_type: 'authorization_code',\n            code,\n            redirect_uri: REDIRECT_URI\n          })\n        });\n        const responseText = await response.text();\n        console.log(\"Response status:\", response.status);\n        if (!response.ok) {\n          console.error(\"Token exchange failed:\", responseText);\n\n          // Check if this is likely a client ID or configuration issue\n          if (responseText.includes('invalid_client') || response.status === 401) {\n            this.error = `Authentication failed: Invalid client credentials. Please check the configuration.`;\n            this.loading = false;\n\n            // Add diagnostics button\n            setTimeout(() => {\n              const errorDiv = document.querySelector('.error-message');\n              if (errorDiv) {\n                const diagButton = document.createElement('button');\n                diagButton.className = 'retry-button diagnostics-button';\n                diagButton.innerText = 'Run Diagnostics';\n                diagButton.addEventListener('click', () => this.$router.push('/diagnostics'));\n                errorDiv.appendChild(diagButton);\n              }\n            }, 100);\n            return;\n          }\n          this.error = `Failed to exchange code for tokens: ${response.status} ${responseText}`;\n          this.loading = false;\n          return;\n        }\n        try {\n          const data = JSON.parse(responseText);\n          console.log(\"Token received successfully\");\n          this.$store.commit('setToken', data.access_token);\n          this.$store.commit('setRefreshToken', data.refresh_token);\n          this.$router.push('/');\n        } catch (parseError) {\n          console.error(\"Error parsing response:\", parseError);\n          this.error = \"Error parsing Spotify response\";\n          this.loading = false;\n        }\n      } catch (error) {\n        console.error('Error during authentication:', error);\n        this.error = `Authentication error: ${error.message}`;\n        this.loading = false;\n      }\n    },\n    returnToLogin() {\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["name","data","loading","error","created","handleCallback","methods","urlParams","URLSearchParams","window","location","search","code","get","CLIENT_ID","spotifyConfig","clientId","process","env","VUE_APP_SPOTIFY_CLIENT_ID","CLIENT_SECRET","VUE_APP_SPOTIFY_CLIENT_SECRET","REDIRECT_URI","redirectUri","VUE_APP_REDIRECT_URI","origin","console","log","authString","base64Auth","btoa","response","fetch","method","headers","body","grant_type","redirect_uri","responseText","text","status","ok","includes","setTimeout","errorDiv","document","querySelector","diagButton","createElement","className","innerText","addEventListener","$router","push","appendChild","JSON","parse","$store","commit","access_token","refresh_token","parseError","message","returnToLogin"],"sources":["C:\\Users\\menof\\OneDrive\\Desktop\\Now Playing\\now-playing\\src\\components\\CallbackPage.vue"],"sourcesContent":["// src/components/CallbackPage.vue\r\n<template>\r\n  <div class=\"callback-container\">\r\n    <div v-if=\"loading\" class=\"loading\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Connecting to Spotify...</p>\r\n    </div>\r\n    <div v-if=\"error\" class=\"error-message\">\r\n      <p>{{ error }}</p>\r\n      <button @click=\"returnToLogin\" class=\"retry-button\">Return to Login</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CallbackPage',\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      error: null\r\n    }\r\n  },\r\n  created() {\r\n    this.handleCallback()\r\n  },\r\n  methods: {\r\n    async handleCallback() {\r\n      const urlParams = new URLSearchParams(window.location.search)\r\n      const code = urlParams.get('code')\r\n      const error = urlParams.get('error')\r\n      \r\n      if (error) {\r\n        this.error = `Spotify authentication error: ${error}`\r\n        this.loading = false\r\n        return\r\n      }\r\n      \r\n      if (!code) {\r\n        this.error = \"No authorization code received from Spotify\"\r\n        this.loading = false\r\n        return\r\n      }\r\n      \r\n      try {        const CLIENT_ID = window.spotifyConfig?.clientId || process.env.VUE_APP_SPOTIFY_CLIENT_ID\r\n        const CLIENT_SECRET = process.env.VUE_APP_SPOTIFY_CLIENT_SECRET\r\n        const REDIRECT_URI = window.spotifyConfig?.redirectUri || process.env.VUE_APP_REDIRECT_URI || `${window.location.origin}/callback`\r\n        \r\n        console.log(\"Using client ID:\", CLIENT_ID)\r\n        console.log(\"Using redirect URI:\", REDIRECT_URI)\r\n        // Don't log client secret\r\n        \r\n        // Create authorization string\r\n        const authString = `${CLIENT_ID}:${CLIENT_SECRET}`\r\n        const base64Auth = btoa(authString)\r\n        \r\n        const response = await fetch('https://accounts.spotify.com/api/token', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': `Basic ${base64Auth}`\r\n          },\r\n          body: new URLSearchParams({\r\n            grant_type: 'authorization_code',\r\n            code,\r\n            redirect_uri: REDIRECT_URI\r\n          })\r\n        })\r\n        \r\n        const responseText = await response.text()\r\n        console.log(\"Response status:\", response.status)\r\n          if (!response.ok) {\r\n          console.error(\"Token exchange failed:\", responseText)\r\n          \r\n          // Check if this is likely a client ID or configuration issue\r\n          if (responseText.includes('invalid_client') || response.status === 401) {\r\n            this.error = `Authentication failed: Invalid client credentials. Please check the configuration.`\r\n            this.loading = false\r\n            \r\n            // Add diagnostics button\r\n            setTimeout(() => {\r\n              const errorDiv = document.querySelector('.error-message')\r\n              if (errorDiv) {\r\n                const diagButton = document.createElement('button')\r\n                diagButton.className = 'retry-button diagnostics-button'\r\n                diagButton.innerText = 'Run Diagnostics'\r\n                diagButton.addEventListener('click', () => this.$router.push('/diagnostics'))\r\n                errorDiv.appendChild(diagButton)\r\n              }\r\n            }, 100)\r\n            \r\n            return\r\n          }\r\n          \r\n          this.error = `Failed to exchange code for tokens: ${response.status} ${responseText}`\r\n          this.loading = false\r\n          return\r\n        }\r\n        \r\n        try {\r\n          const data = JSON.parse(responseText)\r\n          console.log(\"Token received successfully\")\r\n          \r\n          this.$store.commit('setToken', data.access_token)\r\n          this.$store.commit('setRefreshToken', data.refresh_token)\r\n          \r\n          this.$router.push('/')\r\n        } catch (parseError) {\r\n          console.error(\"Error parsing response:\", parseError)\r\n          this.error = \"Error parsing Spotify response\"\r\n          this.loading = false\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during authentication:', error)\r\n        this.error = `Authentication error: ${error.message}`\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    returnToLogin() {\r\n      this.$router.push('/login')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.callback-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #121212;\r\n  color: white;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 50%;\r\n  border-top-color: #1DB954;\r\n  animation: spin 1s ease-in-out infinite;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.error-message {\r\n  background-color: #282828;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  max-width: 500px;\r\n  text-align: center;\r\n}\r\n\r\n.retry-button {\r\n  background-color: #1DB954;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 30px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n}\r\n\r\n.retry-button:hover {\r\n  background-color: #1ed760;\r\n}\r\n\r\n.diagnostics-button {\r\n  margin-top: 1rem;\r\n  background-color: #535353;\r\n}\r\n\r\n.diagnostics-button:hover {\r\n  background-color: #646464;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}